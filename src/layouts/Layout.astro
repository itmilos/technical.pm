---
import '../styles/global.css';
import CookieConsent from '../components/CookieConsent.astro';
import ThemeSwitcher from '../components/ThemeSwitcher.astro';
import { getTheme } from '../utils/theme';
import { SEO } from 'astro-seo';

interface Props {
  title: string;
  description?: string;
  image?: string;
  article?: boolean;
  twitterCard?: 'summary' | 'summary_large_image';
}

const { 
  title, 
  description = "Technical Product Manager Portfolio", 
  image = "/seo/og-image.png",
  article = false,
  twitterCard = 'summary_large_image'
} = Astro.props;
const initialTheme = getTheme();
const canonicalURL = Astro.url?.href ?? "https://technical.pm";
---

<!DOCTYPE html>
<html lang="en" data-theme={initialTheme}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <SEO
      title={title}
      description={description}
      canonical={canonicalURL}
      openGraph={{
        basic: {
          title: title,
          type: article ? 'article' : 'website',
          image: image,
        },
        optional: {
          description: description,
        },
        image: {
          alt: `${title} - Technical Product Manager Portfolio`,
        },
      }}
      twitter={{
        card: twitterCard,
        site: '@MikeTechnicalPM',
        creator: '@MikeTechnicalPM',
        title: title,
        description: description,
        image: image,
        imageAlt: `${title} - Technical Product Manager Portfolio`,
      }}
      extend={{
        meta: [
          { name: 'robots', content: 'index, follow' },
          { name: 'author', content: 'Milos Rujevic' },
        ],
        link: [
          { rel: 'preconnect', href: 'https://fonts.googleapis.com' },
          { rel: 'preconnect', href: 'https://fonts.gstatic.com', crossorigin: '' },
          { 
            rel: 'stylesheet',
            href: 'https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap'
          },
          { href: 'https://fonts.googleapis.com/css2?family=Montserrat:wght@900&display=swap', rel: 'stylesheet' },
        ],
      }}
    />

    <script type="application/ld+json">
      {JSON.stringify({
        "@context": "https://schema.org",
        "@type": "Person",
        "name": "Milos Rujevic",
        "jobTitle": "Technical Product Manager",
        "url": "https://technical.pm",
        "sameAs": [
          "https://www.linkedin.com/in/aitechpm/"
        ]
      })}
    </script>

    <!-- Theme initialization script - runs immediately to prevent FOUC -->
    <script>
      // Set dark theme as default immediately to prevent flash
      (function() {
        const THEME_COOKIE_KEY = 'theme_preference';
        const savedTheme = document.cookie
          .split('; ')
          .find(row => row.startsWith(`${THEME_COOKIE_KEY}=`))
          ?.split('=')[1];
        const theme = savedTheme || 'dark'; // Default to dark theme
        document.documentElement.setAttribute('data-theme', theme);
      })();
    </script>
  </head>
  <body class="min-h-screen font-sans antialiased transition-colors duration-200">
    <nav class="sticky top-0 z-20 bg-[rgb(var(--background))]/80 backdrop-blur border-b border-[rgb(var(--border))] shadow-sm">
      <div class="container mx-auto flex items-center justify-between px-4 py-3 max-w-4xl">
        <div class="flex items-center gap-4">
          <a href="/" aria-label="Home" class="inline-block align-middle">
            <h1 class="font-extrabold uppercase text-xl sm:text-2xl leading-none tracking-tight relative inline-block logo-text">
              T <span class="logo-accent">PM</span>
            </h1>
          </a>
          <ThemeSwitcher />
        </div>
        <div class="flex items-center gap-4">
          <!-- Desktop navigation -->
          <ul class="hidden md:flex space-x-6 text-[rgb(var(--foreground))] font-medium">
            <li><a href="#experience" class="hover:text-[rgb(var(--primary))] transition-colors duration-200">Experience</a></li>
            <li><a href="#projects" class="hover:text-[rgb(var(--primary))] transition-colors duration-200">Projects</a></li>
            <li><a href="#skills" class="hover:text-[rgb(var(--primary))] transition-colors duration-200">Skills</a></li>
            <li><a href="#pricing" class="hover:text-[rgb(var(--primary))] transition-colors duration-200">Pricing</a></li>
            <li><a href="/blog" class="hover:text-[rgb(var(--primary))] transition-colors duration-200">Blog</a></li>
            <li><a href="#contact" class="hover:text-[rgb(var(--primary))] transition-colors duration-200">Contact</a></li>
          </ul>


          <!-- Mobile menu button -->
          <button
            id="mobile-menu-button"
            class="md:hidden p-2 rounded-lg hover:bg-[rgb(var(--accent))]/10 focus:outline-none focus:ring-2 focus:ring-[rgb(var(--primary))] transition-colors duration-200"
            aria-label="Toggle menu"
          >
            <svg
              class="w-6 h-6 text-[rgb(var(--foreground))]"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M4 6h16M4 12h16M4 18h16"
              />
            </svg>
          </button>
        </div>

        <!-- Mobile navigation -->
        <div
          id="mobile-menu"
          class="fixed inset-0 z-20 hidden bg-[rgb(var(--background))]/95 backdrop-blur"
        >
          <div class="flex flex-col h-full">
            <div class="flex justify-between items-center p-4 border-b border-[rgb(var(--border))]">
              <a href="/" aria-label="Home" class="inline-block align-middle">
                <h1 class="font-extrabold uppercase text-xl sm:text-2xl leading-none tracking-tight relative inline-block logo-text">
                  T <span class="logo-accent">PM</span>
                </h1>
              </a>
              <button
                id="close-menu-button"
                class="p-2 rounded-lg hover:bg-[rgb(var(--accent))]/10 focus:outline-none focus:ring-2 focus:ring-[rgb(var(--primary))] transition-colors duration-200"
                aria-label="Close menu"
              >
                <svg
                  class="w-6 h-6 text-[rgb(var(--foreground))]"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M6 18L18 6M6 6l12 12"
                  />
                </svg>
              </button>
            </div>
            <ul class="flex flex-col p-4 space-y-4 text-[rgb(var(--foreground))] font-medium bg-[rgb(var(--muted))]/95">
              <li>
                                  <a
                  href="#experience"
                  class="block py-2 hover:text-[rgb(var(--primary))] transition-colors duration-200"
                  onclick="document.getElementById('mobile-menu').classList.add('hidden')"
                >
                  Experience
                </a>
              </li>
              <li>
                <a
                  href="#projects"
                  class="block py-2 hover:text-[rgb(var(--primary))] transition-colors duration-200"
                  onclick="document.getElementById('mobile-menu').classList.add('hidden')"
                >
                  Projects
                </a>
              </li>
              <li>
                <a
                  href="#skills"
                  class="block py-2 hover:text-[rgb(var(--primary))] transition-colors duration-200"
                  onclick="document.getElementById('mobile-menu').classList.add('hidden')"
                >
                  Skills
                </a>
              </li>
              <li>
                <a
                  href="#pricing"
                  class="block py-2 hover:text-[rgb(var(--primary))] transition-colors duration-200"
                  onclick="document.getElementById('mobile-menu').classList.add('hidden')"
                >
                  Pricing
                </a>
              </li>
              <li>
                <a
                  href="/blog"
                  class="block py-2 hover:text-[rgb(var(--primary))] transition-colors duration-200"
                  onclick="document.getElementById('mobile-menu').classList.add('hidden')"
                >
                  Blog
                </a>
              </li>
              <li>
                <a
                  href="#contact"
                  class="block py-2 hover:text-[rgb(var(--primary))] transition-colors duration-200"
                  onclick="document.getElementById('mobile-menu').classList.add('hidden')"
                >
                  Contact
                </a>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </nav>
    <slot />
    <CookieConsent />

    <script>
      // Mobile menu functionality
      const mobileMenuButton = document.getElementById('mobile-menu-button');
      const closeMenuButton = document.getElementById('close-menu-button');
      const mobileMenu = document.getElementById('mobile-menu');

      function toggleMenu() {
        mobileMenu?.classList.toggle('hidden');
        document.body.style.overflow = mobileMenu?.classList.contains('hidden') ? '' : 'hidden';
      }

      mobileMenuButton?.addEventListener('click', toggleMenu);
      closeMenuButton?.addEventListener('click', toggleMenu);

      // Close menu when clicking outside
      mobileMenu?.addEventListener('click', (e) => {
        if (e.target === mobileMenu) {
          toggleMenu();
        }
      });

      // Close menu on window resize if open
      window.addEventListener('resize', () => {
        if (window.innerWidth >= 768 && !mobileMenu?.classList.contains('hidden')) {
          toggleMenu();
        }
      });

      // Apply theme styles immediately on load
      (function() {
        const THEME_COOKIE_KEY = 'theme_preference';
        const savedTheme = document.cookie
          .split('; ')
          .find(row => row.startsWith(`${THEME_COOKIE_KEY}=`))
          ?.split('=')[1];
        const theme = (savedTheme === 'light' || savedTheme === 'dark') ? savedTheme : 'dark'; // Default to dark theme

        // Theme colors mapped directly to avoid import issues in inline script
        const themeColors = {
          'dark': {
            'background': '30, 30, 30',
            'foreground': '243, 230, 248',
            'card': '243, 230, 248',
            'card-foreground': '30, 30, 30',
            'primary': '108, 62, 166',
            'primary-foreground': '255, 255, 255',
            'secondary': '79, 79, 79',
            'secondary-foreground': '243, 230, 248',
            'muted': '69, 69, 69',
            'muted-foreground': '181, 126, 220',
            'accent': '181, 126, 220',
            'accent-foreground': '255, 255, 255',
            'border': '93, 93, 93',
            'cta': '255, 79, 88',
            'cta-foreground': '255, 255, 255',
            'ui-accent': '14, 194, 164',
            'ui-accent-foreground': '255, 255, 255'
          },
          'light': {
            'background': '255, 255, 255',
            'foreground': '30, 30, 30',
            'card': '243, 230, 248',
            'card-foreground': '30, 30, 30',
            'primary': '108, 62, 166',
            'primary-foreground': '255, 255, 255',
            'secondary': '243, 230, 248',
            'secondary-foreground': '30, 30, 30',
            'muted': '241, 224, 245',
            'muted-foreground': '129, 64, 134',
            'accent': '181, 126, 220',
            'accent-foreground': '255, 255, 255',
            'border': '233, 208, 237',
            'cta': '255, 79, 88',
            'cta-foreground': '255, 255, 255',
            'ui-accent': '14, 194, 164',
            'ui-accent-foreground': '255, 255, 255'
          }
        };

        const colors = themeColors[theme];
        const root = document.documentElement;
        
        // Apply all CSS custom properties
        Object.entries(colors).forEach(function(entry) {
          const key = entry[0];
          const value = entry[1];
          root.style.setProperty('--' + key, value);
        });
        
        // Apply theme-specific classes to the body
        document.body.className = 'bg-[rgb(var(--background))] text-[rgb(var(--foreground))] transition-colors duration-200 min-h-screen font-sans antialiased';
      })();
    </script>
  </body>
</html>

<style is:global>
  /* Logo styling using theme colors */
  .logo-text {
    color: rgb(var(--cta));
    text-shadow: 
      0.08em 0.08em 0 rgb(var(--primary)),
      0.10em 0.10em 0 rgb(var(--primary));
    font-family: 'Montserrat', 'Oswald', 'Bungee', sans-serif;
  }
  
  .logo-accent {
    color: rgb(var(--accent));
  }
  
  html {
    font-family: 'Inter', system-ui, sans-serif;
  }
  
  code {
    font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
      Bitstream Vera Sans Mono, Courier New, monospace;
  }

  /* Theme transitions */
  * {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 200ms;
  }
</style> 
