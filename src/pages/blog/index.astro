---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

// Get all blog posts
const posts = await getCollection('blog');

// Debug logging in frontmatter
console.log('Debug - Blog index posts:', posts.map(p => ({
  slug: p.slug,
  id: p.id,
  filename: p.id.split('/').pop(),
  data: p.data
})));

// Get all unique tags
const allTags = Array.from(
  new Set(
    posts.flatMap((post: CollectionEntry<'blog'>) => post.data.tags as string[])
  )
).sort() as string[];

// Get the current tag from the URL query parameter
const currentTag: string | null = Astro.url.searchParams.get('tag');

// Filter posts by tag if one is selected
const filteredPosts = currentTag
  ? posts.filter((post: CollectionEntry<'blog'>) => post.data.tags.includes(currentTag))
  : posts;

// Sort posts by date (newest first)
const sortedPosts = filteredPosts.sort((a: CollectionEntry<'blog'>, b: CollectionEntry<'blog'>) => 
  new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

// Debug logging in frontmatter
console.log('Debug - Current URL:', Astro.url.pathname);
console.log('Debug - Current tag:', currentTag);
console.log('Debug - Filtered posts:', sortedPosts.map(p => ({
  slug: p.slug,
  id: p.id,
  filename: p.id.split('/').pop()
})));

// Pre-generate post links for debugging
const postLinks = sortedPosts.map(post => ({
  slug: post.slug,
  id: post.id,
  filename: post.id.split('/').pop(),
  link: `/blog/${post.slug}`
}));
console.log('Debug - Post links:', postLinks);
---

<Layout title="Blog | Technical PM">
  <div class="container mx-auto px-4 py-8 max-w-4xl">
    <header class="mb-12">
      <h1 class="text-4xl font-bold mb-4">Technical PM Blog</h1>
      <p class="text-xl text-gray-700 dark:text-gray-300">
        Insights, guides, and best practices for technical product managers.
      </p>
    </header>

    <!-- Tag Filter -->
    <div class="mb-8">
      <div class="flex flex-wrap gap-2">
        <a
          href="/blog"
          class={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${
            !currentTag
              ? 'bg-blue-600 text-white'
              : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'
          }`}
        >
          All Posts
        </a>
        {allTags.map((tag: string) => (
          <a
            href={`/blog?tag=${encodeURIComponent(tag)}`}
            class={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${
              currentTag === tag
                ? 'bg-blue-600 text-white'
                : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'
            }`}
          >
            {tag}
          </a>
        ))}
      </div>
    </div>

    <!-- Active Tag Header -->
    {currentTag && (
      <div class="mb-8">
        <h2 class="text-2xl font-semibold mb-2">
          Posts tagged with "{currentTag}"
        </h2>
        <a href="/blog" class="text-blue-600 dark:text-blue-400 hover:underline text-sm">
          ‚Üê View all posts
        </a>
      </div>
    )}

    <!-- Blog Posts Grid -->
    <div class="grid gap-8 md:grid-cols-2">
      {sortedPosts.map((post: CollectionEntry<'blog'>) => (
        <article class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
          <div class="p-6">
            <div class="flex flex-wrap gap-2 mb-4">
              {post.data.tags.map((tag: string) => (
                <a
                  href={`/blog?tag=${encodeURIComponent(tag)}`}
                  class="px-2 py-1 bg-gray-100 dark:bg-gray-700 text-xs rounded-full hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors"
                >
                  {tag}
                </a>
              ))}
            </div>
            <h2 class="text-xl font-bold mb-2">
              <a href={`/blog/${post.slug}`} class="hover:text-blue-600 dark:hover:text-blue-400">
                {post.data.title}
              </a>
            </h2>
            <p class="text-gray-600 dark:text-gray-400 mb-4">
              {post.data.description}
            </p>
            <div class="flex items-center justify-between text-sm text-gray-500 dark:text-gray-400">
              <time datetime={post.data.date}>
                {new Date(post.data.date).toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })}
              </time>
              <span>{post.data.author}</span>
            </div>
          </div>
        </article>
      ))}
    </div>

    <!-- No Posts Message -->
    {sortedPosts.length === 0 && (
      <div class="text-center py-12">
        <p class="text-xl text-gray-600 dark:text-gray-400 mb-4">
          No posts found {currentTag ? `for tag "${currentTag}"` : ''}.
        </p>
        {currentTag && (
          <a href="/blog" class="text-blue-600 dark:text-blue-400 hover:underline">
            View all posts
          </a>
        )}
      </div>
    )}
  </div>
</Layout>

<style>
  /* Add smooth transitions for tag filters */
  a {
    transition: all 0.2s ease-in-out;
  }
</style> 