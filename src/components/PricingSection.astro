---
interface PricingTier {
  title: string;
  price: string;
  features: string[];
  modalId: string;
  buttonText: string;
}

interface Props {
  tiers: PricingTier[];
}

const { tiers } = Astro.props;
---

<section id="pricing" class="mb-16 sm:mb-20 px-4">
  <h2 class="text-2xl sm:text-3xl font-semibold mb-6 sm:mb-8 text-center transition-colors duration-200 cursor-default" style="color: var(--text-primary);">Service Tiers</h2>
  <div class="grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 sm:gap-8 max-w-5xl mx-auto">
    {tiers.map((tier) => (
      <div class="glass-card rounded-lg p-4 sm:p-6 text-center group flex flex-col min-h-[300px] sm:min-h-[340px]">
        <h3 class="font-bold text-lg sm:text-xl mb-2 transition-colors duration-200" style="color: var(--text-primary);">{tier.title}</h3>
        <p class="text-xl sm:text-2xl font-semibold mb-2 transition-transform duration-300" style="color: var(--text-primary);">{tier.price}</p>
        <ul class="mb-4 space-y-2 text-sm sm:text-base" style="color: var(--text-secondary);">
          {tier.features.map((feature) => (
            <li class="hover:transition-colors duration-200 transform hover:scale-105 inline-block">
              {feature}
            </li>
          ))}
        </ul>
        <div class="flex-1"></div>
        <button 
          onclick={`document.getElementById('${tier.modalId}').classList.remove('hidden'); return false;`}
          class="inline-block px-4 py-2 rounded transition-all duration-300 hover:scale-105 hover:shadow-lg active:scale-95 group mt-auto text-sm sm:text-base"
          style="background: var(--accent-primary); color: white;"
        >
          {tier.buttonText}
          <span class="inline-block ml-2 transform group-hover:translate-x-1 transition-transform duration-300">â†’</span>
        </button>
      </div>
    ))}
  </div>
</section> 