---
interface Props {
	centerTitle: string;
	centerText: string;
	leftTitle: string;
	leftText: string;
	rightTitle: string;
	rightText: string;
}

const {
	centerTitle,
	centerText,
	leftTitle,
	leftText,
	rightTitle,
	rightText
} = Astro.props;
---

<!-- Circular Diagram - Mobile Version -->
<div id="mobile-diagram-container" class="relative w-full max-w-6xl mx-auto md:hidden">
	<div class="mobile-diagram custom-scrollbar">
		<!-- Center Circle - Why -->
		<div class="mobile-item-container snap-center">
			<div class="mobile-center-item" data-circle="why">
				<div class="mobile-content">
					<h3 class="mobile-title text-pretty text-decoration-underline text-decoration-dotted text-decoration-2 text-underline-offset-4 text-transform-uppercase text-overflow-ellipsis text-wrap-balance text-indent-4" style="color: var(--accent-primary);">{centerTitle}</h3>
					<p class="mobile-text text-pretty text-decoration-underline text-decoration-wavy text-decoration-1 text-underline-offset-2 text-transform-none text-overflow-clip text-wrap-pretty text-indent-2" style="color: var(--text-primary);">
						{centerText}
					</p>
				</div>
			</div>
		</div>

		<!-- How Item - Left -->
		<div class="mobile-item-container snap-center">
			<div class="mobile-item square-item" data-circle="how">
				<!-- <div class="mobile-dot"></div> -->
				<div class="mobile-content">
					<h3 class="mobile-title-small text-pretty text-decoration-underline text-decoration-dashed text-decoration-2 text-underline-offset-3 text-transform-capitalize text-overflow-ellipsis text-wrap-balance text-indent-2" style="color: var(--accent-secondary);">{leftTitle}</h3>
					<p class="mobile-text-small text-pretty text-decoration-underline text-decoration-dotted text-decoration-1 text-underline-offset-1 text-transform-none text-overflow-clip text-wrap-pretty text-indent-1" style="color: var(--text-secondary);">
						{leftText}
					</p>
				</div>
			</div>
		</div>

		<!-- What Item - Right -->
		<div class="mobile-item-container snap-center">
			<div class="mobile-item rectangle-item" data-circle="what">
				<!-- <div class="mobile-dot"></div> -->
				<div class="mobile-content">
					<h3 class="mobile-title-small text-pretty text-decoration-underline text-decoration-dashed text-decoration-2 text-underline-offset-3 text-transform-capitalize text-overflow-ellipsis text-wrap-balance text-indent-2" style="color: var(--accent-tertiary);">{rightTitle}</h3>
					<p class="mobile-text-small text-pretty text-decoration-underline text-decoration-dotted text-decoration-1 text-underline-offset-1 text-transform-none text-overflow-clip text-wrap-pretty text-indent-1" style="color: var(--text-secondary);">
						{rightText}
					</p>
				</div>
			</div>
		</div>

		<!-- Observer target element -->
		<div id="diagram-end-observer" class="h-1 w-full"></div>
	</div>
</div>

<style>
	/* Mobile Diagram Styles */
	.mobile-diagram {
		width: 100%;
		height: 80vh;
		display: flex;
		flex-direction: column;
		overflow-y: auto;
		scroll-snap-type: y mandatory;
		scroll-behavior: smooth;
		-webkit-overflow-scrolling: touch;
		transition: opacity 0.5s ease-out, transform 0.5s ease-out;
		/* Ensure it doesn't interfere with header elements */
		position: relative;
		z-index: 1;
		/* Prevent touch event propagation issues */
		touch-action: pan-y;
	}

	.mobile-diagram.fade-out {
		opacity: 0;
		transform: translateY(-20px);
		pointer-events: none;
	}

	.mobile-item-container {
		width: 100%;
		height: 100vh;
		display: flex;
		justify-content: center;
		align-items: center;
		position: relative;
		flex-shrink: 0;
	}

	/* Center item styling */
	.mobile-center-item {
		width: 200px;
		height: 200px;
		border-radius: 50%;
		background: linear-gradient(135deg, 
			rgba(108, 62, 166, 0.2) 0%, 
			rgba(108, 62, 166, 0.1) 100%);
		border: 2px solid rgba(108, 62, 166, 0.4);
		display: flex;
		align-items: center;
		justify-content: center;
		text-align: center;
		box-shadow: 0 8px 24px rgba(108, 62, 166, 0.15);
	}

	/* Mobile items styling */
	.mobile-item {
		width: 280px;
		min-height: 120px;
		border-radius: 16px;
		background: linear-gradient(135deg, 
			rgba(255, 255, 255, 0.15) 0%, 
			rgba(255, 255, 255, 0.05) 100%);
		display: flex;
		align-items: center;
		justify-content: center;
		text-align: center;
		position: relative;
	}

	.square-item {
		border: 2px solid rgba(181, 126, 220, 0.4);
		box-shadow: 0 8px 24px rgba(181, 126, 220, 0.15);
	}

	.rectangle-item {
		border: 2px solid rgba(14, 194, 164, 0.4);
		box-shadow: 0 8px 24px rgba(14, 194, 164, 0.15);
	}

	/* Connector lines */
	.connector-line {
		width: 2px;
		height: 2rem;
		background: linear-gradient(to bottom, 
			rgba(108, 62, 166, 0.6) 0%,
			rgba(181, 126, 220, 0.4) 50%,
			rgba(14, 194, 164, 0.6) 100%);
	}

	/* Mobile dots */
	.mobile-dot {
		position: absolute;
		top: -12px;
		left: 50%;
		width: 12px;
		height: 12px;
		border-radius: 50%;
		transform: translateX(-50%);
		z-index: 10;
	}

	.square-item .mobile-dot {
		background: rgba(181, 126, 220, 0.8);
		box-shadow: 0 0 0 4px rgba(181, 126, 220, 0.2);
	}

	.rectangle-item .mobile-dot {
		background: rgba(14, 194, 164, 0.8);
		box-shadow: 0 0 0 4px rgba(14, 194, 164, 0.2);
	}

	/* Typography */
	.mobile-content {
		padding: 1.5rem;
		width: 100%;
		height: 100%;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		text-align: center;
	}

	.mobile-title {
		font-size: 1.125rem;
		font-weight: 700;
		margin-bottom: 0.5rem;
		line-height: 1.2;
		text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
	}
	
	.mobile-title-small {
		font-size: 1rem;
		font-weight: 700;
		margin-bottom: 0.5rem;
		line-height: 1.1;
		text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
	}
	
	.mobile-text {
		font-size: 0.875rem;
		line-height: 1.4;
		font-weight: 100;
		text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
	}
	
	.mobile-text-small {
		font-size: 0.875rem;
		line-height: 1.4;
		letter-spacing: 0.001em;
		font-weight: 100;
		word-spacing: 0.02em;
	}

	/* Extra small mobile devices */
	@media (max-width: 480px) {
		.mobile-diagram {
			height: calc(100vh - 64px);
		}

		.mobile-item-container {
			height: calc(100vh - 64px);
		}

		.mobile-center-item {
			width: 300px;
			height: 300px;
		}

		.mobile-item {
			width: 100%;
			max-width: 300px;
			min-height: 100px;
		}

		.mobile-content {
			padding: 1.25rem;
		}

		.mobile-title {
			font-size: 2rem;
			margin-bottom: 0.4rem;
			line-height: 1.1;
		}
		
		.mobile-title-small {
			font-size: 1.5rem;
			margin-bottom: 0.4rem;
			line-height: 1.05;
		}
		
		.mobile-text {
			font-size: 1.5rem;
			line-height: 1.35;
		}
		
		.mobile-text-small {
			font-size: 1.5rem;
			line-height: 1.3;
			letter-spacing: 0;
			font-weight: 500;
			word-spacing: 0.01em;
		}

		/* Smaller connector lines */
		.connector-line {
			height: 1.5rem;
		}
	}

	/* Add scroll indicator */
	.mobile-diagram::after {
		content: '';
		position: fixed;
		bottom: 20px;
		left: 50%;
		transform: translateX(-50%);
		width: 30px;
		height: 30px;
		background: linear-gradient(180deg, 
			rgba(255, 255, 255, 0.2) 0%,
			rgba(255, 255, 255, 0.1) 100%);
		border-radius: 50%;
		animation: bounce 2s infinite;
		pointer-events: none;
		z-index: 100;
	}

	@keyframes bounce {
		0%, 20%, 50%, 80%, 100% {
			transform: translateY(0) translateX(-50%);
		}
		40% {
			transform: translateY(-10px) translateX(-50%);
		}
		60% {
			transform: translateY(-5px) translateX(-50%);
		}
	}

	/* Light theme adjustments */
	[data-theme="light"] .mobile-center-item {
		background: linear-gradient(135deg, 
			rgba(59, 130, 246, 0.2) 0%, 
			rgba(59, 130, 246, 0.1) 100%);
		border: 2px solid rgba(59, 130, 246, 0.4);
		box-shadow: 0 8px 24px rgba(59, 130, 246, 0.15);
	}

	[data-theme="light"] .mobile-item {
		background: linear-gradient(135deg, 
			rgba(255, 255, 255, 0.8) 0%, 
			rgba(255, 255, 255, 0.6) 100%);
		border: 1px solid var(--border-primary);
		box-shadow: var(--shadow-secondary);
	}

	[data-theme="light"] .square-item {
		border: 2px solid rgba(29, 78, 216, 0.4);
		box-shadow: 0 8px 24px rgba(29, 78, 216, 0.15);
	}

	[data-theme="light"] .rectangle-item {
		border: 2px solid rgba(14, 116, 144, 0.4);
		box-shadow: 0 8px 24px rgba(14, 116, 144, 0.15);
	}

	[data-theme="light"] .mobile-diagram::after {
		background: linear-gradient(180deg, 
			rgba(0, 0, 0, 0.2) 0%,
			rgba(0, 0, 0, 0.1) 100%);
	}
</style>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const container = document.getElementById('mobile-diagram-container');
		const diagram = container?.querySelector('.mobile-diagram');
		const observerTarget = document.getElementById('diagram-end-observer');

		if (!container || !diagram || !observerTarget) return;

		const observer = new IntersectionObserver((entries) => {
			entries.forEach(entry => {
				if (entry.isIntersecting) {
					// When the observer target is visible (user has scrolled past all sections)
					diagram.classList.add('fade-out');
					
					// Remove the element after animation
					container.style.display = 'none';

					
					// Disconnect the observer since we don't need it anymore
					observer.disconnect();
				}
			});
		}, {
			threshold: 0.6, // Trigger when 50% of the target is visible
			rootMargin: '0px'
		});

		observer.observe(observerTarget);
	});
</script>