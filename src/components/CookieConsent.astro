---
import { Cookies } from '../utils/cookies';
---

<!-- Cookie Consent Banner -->
<div id="cookie-consent" class="fixed bottom-0 left-0 right-0 bg-white shadow-lg transform translate-y-full transition-transform duration-300 ease-in-out z-40">
  <div class="max-w-7xl mx-auto p-4 sm:px-6 lg:px-8">
    <div class="flex flex-col sm:flex-row items-center justify-between gap-4">
      <div class="flex-1">
        <h3 class="text-lg font-semibold text-gray-900">Cookie Preferences</h3>
        <p class="mt-1 text-sm text-gray-600">
          We use cookies to enhance your browsing experience, serve personalized content, and analyze our traffic. 
          By clicking "Accept All", you consent to our use of cookies.
        </p>
      </div>
      <div class="flex flex-col sm:flex-row gap-3">
        <button
          id="cookie-consent-customize"
          class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500"
        >
          Customize
        </button>
        <button
          id="cookie-consent-accept"
          class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500"
        >
          Accept All
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Cookie Preferences Modal - Moved outside the banner -->
<div id="cookie-preferences" class="hidden fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity z-[100]">
  <div class="fixed inset-0 z-[101] overflow-y-auto">
    <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
      <div class="relative transform overflow-hidden rounded-lg bg-white px-4 pb-4 pt-5 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6">
        <div class="absolute right-0 top-0 pr-4 pt-4">
          <button
            type="button"
            id="cookie-preferences-close"
            class="rounded-md bg-white text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2"
          >
            <span class="sr-only">Close</span>
            <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>

        <div class="sm:flex sm:items-start">
          <div class="mt-3 text-center sm:mt-0 sm:text-left w-full">
            <h3 class="text-lg font-semibold leading-6 text-gray-900">Cookie Preferences</h3>
            <div class="mt-4 space-y-4">
              <div class="flex items-start">
                <div class="flex items-center h-5">
                  <input
                    id="cookie-essential"
                    type="checkbox"
                    checked
                    disabled
                    class="h-4 w-4 rounded border-gray-300 text-purple-600 focus:ring-purple-500"
                  />
                </div>
                <div class="ml-3">
                  <label for="cookie-essential" class="font-medium text-gray-900">Essential Cookies</label>
                  <p class="text-sm text-gray-500">Required for the website to function properly. Cannot be disabled.</p>
                </div>
              </div>

              <div class="flex items-start">
                <div class="flex items-center h-5">
                  <input
                    id="cookie-analytics"
                    type="checkbox"
                    class="h-4 w-4 rounded border-gray-300 text-purple-600 focus:ring-purple-500"
                  />
                </div>
                <div class="ml-3">
                  <label for="cookie-analytics" class="font-medium text-gray-900">Analytics Cookies</label>
                  <p class="text-sm text-gray-500">Help us understand how visitors interact with our website.</p>
                </div>
              </div>

              <div class="flex items-start">
                <div class="flex items-center h-5">
                  <input
                    id="cookie-marketing"
                    type="checkbox"
                    class="h-4 w-4 rounded border-gray-300 text-purple-600 focus:ring-purple-500"
                  />
                </div>
                <div class="ml-3">
                  <label for="cookie-marketing" class="font-medium text-gray-900">Marketing Cookies</label>
                  <p class="text-sm text-gray-500">Used to track visitors across websites for marketing purposes.</p>
                </div>
              </div>
            </div>

            <div class="mt-6 flex justify-end gap-3">
              <button
                type="button"
                id="cookie-preferences-save"
                class="inline-flex justify-center rounded-md bg-purple-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600"
              >
                Save Preferences
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  import { Cookies } from '../utils/cookies';

  const COOKIE_CONSENT_KEY = 'cookie_consent';
  const COOKIE_PREFERENCES_KEY = 'cookie_preferences';

  // Initialize cookie consent
  const initCookieConsent = () => {
    const consent = Cookies.get(COOKIE_CONSENT_KEY);
    const preferences = Cookies.get(COOKIE_PREFERENCES_KEY);
    
    if (!consent) {
      showCookieConsent();
    } else if (preferences) {
      applyCookiePreferences(JSON.parse(preferences));
    }
  };

  // Show cookie consent banner
  const showCookieConsent = () => {
    const banner = document.getElementById('cookie-consent');
    if (banner) {
      banner.classList.remove('translate-y-full');
    }
  };

  // Hide cookie consent banner
  const hideCookieConsent = () => {
    const banner = document.getElementById('cookie-consent');
    if (banner) {
      banner.classList.add('translate-y-full');
    }
  };

  // Show cookie preferences modal
  const showCookiePreferences = () => {
    const modal = document.getElementById('cookie-preferences');
    if (modal) {
      modal.classList.remove('hidden');
    }
  };

  // Hide cookie preferences modal
  const hideCookiePreferences = () => {
    const modal = document.getElementById('cookie-preferences');
    if (modal) {
      modal.classList.add('hidden');
    }
  };

  // Apply cookie preferences
  const applyCookiePreferences = (preferences: Record<string, boolean>) => {
    // Here you would implement the actual cookie management based on preferences
    console.log('Applying cookie preferences:', preferences);
  };

  // Save cookie preferences
  const saveCookiePreferences = () => {
    const preferences = {
      analytics: (document.getElementById('cookie-analytics') as HTMLInputElement).checked,
      marketing: (document.getElementById('cookie-marketing') as HTMLInputElement).checked,
      essential: true // Always true
    };

    Cookies.set(COOKIE_PREFERENCES_KEY, JSON.stringify(preferences), 365);
    applyCookiePreferences(preferences);
    hideCookiePreferences();
  };

  // Accept all cookies
  const acceptAllCookies = () => {
    const preferences = {
      analytics: true,
      marketing: true,
      essential: true
    };

    Cookies.set(COOKIE_CONSENT_KEY, 'true', 365);
    Cookies.set(COOKIE_PREFERENCES_KEY, JSON.stringify(preferences), 365);
    applyCookiePreferences(preferences);
    hideCookieConsent();
  };

  // Event Listeners
  document.addEventListener('DOMContentLoaded', () => {
    // Initialize cookie consent
    initCookieConsent();

    // Accept all button
    const acceptButton = document.getElementById('cookie-consent-accept');
    if (acceptButton) {
      acceptButton.addEventListener('click', acceptAllCookies);
    }

    // Customize button
    const customizeButton = document.getElementById('cookie-consent-customize');
    if (customizeButton) {
      customizeButton.addEventListener('click', showCookiePreferences);
    }

    // Close preferences modal
    const closeButton = document.getElementById('cookie-preferences-close');
    if (closeButton) {
      closeButton.addEventListener('click', hideCookiePreferences);
    }

    // Save preferences
    const saveButton = document.getElementById('cookie-preferences-save');
    if (saveButton) {
      saveButton.addEventListener('click', saveCookiePreferences);
    }

    // Close modal when clicking outside
    const modal = document.getElementById('cookie-preferences');
    if (modal) {
      modal.addEventListener('click', (e) => {
        if (e.target === modal) {
          hideCookiePreferences();
        }
      });
    }
  });
</script> 